if this is your first install, automatically load on login with:
    mkdir -p ~/Library/LaunchAgents
    cp /usr/local/Cellar/mongodb/2.0.1-x86_64/org.mongodb.mongod.plist ~/Library/LaunchAgents/
    launchctl load -w ~/Library/LaunchAgents/org.mongodb.mongod.plist

If this is an upgrade and you already have the org.mongodb.mongod.plist loaded:
    launchctl unload -w ~/Library/LaunchAgents/org.mongodb.mongod.plist
    cp /usr/local/Cellar/mongodb/2.0.1-x86_64/org.mongodb.mongod.plist ~/Library/LaunchAgents/
    launchctl load -w ~/Library/LaunchAgents/org.mongodb.mongod.plist

Or start it manually:
    mongod run --config /usr/local/Cellar/mongodb/2.0.1-x86_64/mongod.conf
MongoDB 1.8+ includes a feature for Write Ahead Logging (Journaling), which has been enabled by default.
To disable journaling, use --nojournal.
==> Summary
/usr/local/Cellar/mongodb/2.0.1-x86_64: 18 files, 120M, built in 30 seconds



1. Omniauth needs GITHUB_ID and GITHUB_SECRET to run on localhost. You got to set these 2 as environment variables
2. You can get new GITHUB_ID and GITHUB secret, by following the below steps
    - goto developer.github.com
    - goto Summary - Oauth
    - click on Register their application
    - enter name
    - enter URL as http://localhost:3000
    - enter Callback URL as http://localhost:3000/auth/github/callback
    - click on Register application
    - ClientId = Github id Secret = Github_Secret
    - Use below link to update these 2 environment variables
    http://stackoverflow.com/questions/135688/setting-environment-variables-in-os-x

3. omniauth has changed some of it format
        omniauth['user_info']['nickname'] changed to omniauth['info']['nickname']
4. in mongo, collection = table, document = row,
5. To work on mongo-terminal, go to /usr/local/Cellar/mongodb/2.0.4-x86_64/bin/mongo
   Some commands are
        - show dbs
        - use craft_wiki_development
        -  db.users.find()
        - collections["people"].insert({
             "_id" : ..., "first_name" : "Heinrich", "last_name" : "Heine"
           })
        - collections["people"].update({
             { "_id" : ... },
             { "$set" : { "first_name" : "Christian Johan" } }
           })
        - collections["people"].remove("_id" : ... )      ---- destroy
        - collections["people"].remove("first_name" : "Heinrich") ---- delete_all



